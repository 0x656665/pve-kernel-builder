# Example from https://github.com/actions/runner/blob/8db8bbe13a0dabc165d0ff19a1ecb85a4fe86dd8/.github/workflows/release.yml

name: Release

on:
  workflow_dispatch:
    inputs:
      artifact-name:
        type: string
        required: true
      kernel-version:
        type: string
        required: true
      proxmox-version:
        type: string
        required: true
  #push:
  #  paths:
  #    - releaseVersion

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ inputs.artifact-name }}
          path: ./assets

      - name: Create ReleaseNote
        id: releaseNote
        uses: actions/github-script@0.3.0
        with:
          #github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const core = require('@actions/core')
          const fs = require('fs');
          #const runnerVersion = fs.readFileSync('${{ github.workspace }}/src/runnerversion', 'utf8').replace(/\n$/g, '')
          var releaseNote = fs.readFileSync('${{ github.workspace }}/release-notes.md', 'utf8')
          releaseNode = releaseNote.replace(/<KERNEL_VERSION>/g, ${{ inputs.kernel-version }})
          releaseNode = releaseNote.replace(/<PROXMOX_VERSION>/g, ${{ inputs.proxmox-version }})
          console.log(releaseNote)
          #core.setOutput('version', runnerVersion);
          core.setOutput('note', releaseNote);

#    - name: Create GitHub release
#      uses: actions/create-release@master
#      id: createRelease
#      name: Create ${{ steps.releaseNote.outputs.version }} Kernel Release
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: "v${{ steps.releaseNote.outputs.version }}"
#        release_name: "Proxmox VE kernel ${{ steps.releaseNote.outputs.version }} (Proxmox VE ${{ proxmox_version }})"
#        body: |
#          ${{ steps.releaseNote.outputs.note }}
#
#    - name: Upload Release Assets
#      uses: actions/upload-release-asset@v1.0.1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.createRelease.outputs.upload_url }}
#        asset_path: ${{ github.workspace }}/actions-runner-linux-x64-${{ steps.releaseNote.outputs.version }}.tar.gz
#        asset_name: actions-runner-linux-x64-${{ steps.releaseNote.outputs.version }}.tar.gz
#        asset_content_type: application/octet-stream

      # Using action-gh-release from https://github.com/softprops/action-gh-release
      - name: Release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          #repository: brunokc/pve-kernel-builder
          name: "Proxmox VE kernel ${{ inputs.kernel-version }} (Proxmox VE ${{ intputs.proxmox-version }})"
          body: ${{ steps.releaseNote.outputs.note }}
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          #token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          draft: true
          fail_on_unmatched_files: true
          files: ./assets/*.deb
